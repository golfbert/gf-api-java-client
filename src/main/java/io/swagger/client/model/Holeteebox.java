/**
 * Golfbert API
 * This API allows you to access rich golf course information, including gps coordinates and geo polygons of courses holes. This API can only be used in conjunction with a valid api token, access key and secret. More information can be found [here](https://golfbert.com/api).
 *
 * OpenAPI spec version: 1.0.13
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Point;


/**
 * Holeteebox
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-16T22:14:27.256-07:00")
public class Holeteebox   {
  @SerializedName("holeid")
  private Integer holeid = null;

  @SerializedName("holenumber")
  private Integer holenumber = null;

  @SerializedName("teeboxtype")
  private String teeboxtype = null;

  @SerializedName("color")
  private String color = null;

  @SerializedName("length")
  private Integer length = null;

  @SerializedName("par")
  private Integer par = null;

  @SerializedName("handicap")
  private Integer handicap = null;

  @SerializedName("coordinates")
  private Point coordinates = null;

  public Holeteebox holeid(Integer holeid) {
    this.holeid = holeid;
    return this;
  }

   /**
   * Get holeid
   * @return holeid
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public Integer getHoleid() {
    return holeid;
  }

  public void setHoleid(Integer holeid) {
    this.holeid = holeid;
  }

  public Holeteebox holenumber(Integer holenumber) {
    this.holenumber = holenumber;
    return this;
  }

   /**
   * Get holenumber
   * @return holenumber
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getHolenumber() {
    return holenumber;
  }

  public void setHolenumber(Integer holenumber) {
    this.holenumber = holenumber;
  }

  public Holeteebox teeboxtype(String teeboxtype) {
    this.teeboxtype = teeboxtype;
    return this;
  }

   /**
   * Get teeboxtype
   * @return teeboxtype
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTeeboxtype() {
    return teeboxtype;
  }

  public void setTeeboxtype(String teeboxtype) {
    this.teeboxtype = teeboxtype;
  }

  public Holeteebox color(String color) {
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getColor() {
    return color;
  }

  public void setColor(String color) {
    this.color = color;
  }

  public Holeteebox length(Integer length) {
    this.length = length;
    return this;
  }

   /**
   * Get length
   * @return length
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getLength() {
    return length;
  }

  public void setLength(Integer length) {
    this.length = length;
  }

  public Holeteebox par(Integer par) {
    this.par = par;
    return this;
  }

   /**
   * Get par
   * @return par
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getPar() {
    return par;
  }

  public void setPar(Integer par) {
    this.par = par;
  }

  public Holeteebox handicap(Integer handicap) {
    this.handicap = handicap;
    return this;
  }

   /**
   * Get handicap
   * @return handicap
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getHandicap() {
    return handicap;
  }

  public void setHandicap(Integer handicap) {
    this.handicap = handicap;
  }

  public Holeteebox coordinates(Point coordinates) {
    this.coordinates = coordinates;
    return this;
  }

   /**
   * Get coordinates
   * @return coordinates
  **/
  @ApiModelProperty(example = "null", value = "")
  public Point getCoordinates() {
    return coordinates;
  }

  public void setCoordinates(Point coordinates) {
    this.coordinates = coordinates;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Holeteebox holeteebox = (Holeteebox) o;
    return Objects.equals(this.holeid, holeteebox.holeid) &&
        Objects.equals(this.holenumber, holeteebox.holenumber) &&
        Objects.equals(this.teeboxtype, holeteebox.teeboxtype) &&
        Objects.equals(this.color, holeteebox.color) &&
        Objects.equals(this.length, holeteebox.length) &&
        Objects.equals(this.par, holeteebox.par) &&
        Objects.equals(this.handicap, holeteebox.handicap) &&
        Objects.equals(this.coordinates, holeteebox.coordinates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(holeid, holenumber, teeboxtype, color, length, par, handicap, coordinates);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Holeteebox {\n");
    
    sb.append("    holeid: ").append(toIndentedString(holeid)).append("\n");
    sb.append("    holenumber: ").append(toIndentedString(holenumber)).append("\n");
    sb.append("    teeboxtype: ").append(toIndentedString(teeboxtype)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    par: ").append(toIndentedString(par)).append("\n");
    sb.append("    handicap: ").append(toIndentedString(handicap)).append("\n");
    sb.append("    coordinates: ").append(toIndentedString(coordinates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

